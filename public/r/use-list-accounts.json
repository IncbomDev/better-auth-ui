{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-list-accounts",
  "type": "registry:lib",
  "title": "Use List Accounts",
  "description": "",
  "dependencies": [],
  "registryDependencies": [
    "true/auth-hooks.json",
    "true/model-names.json",
    "true/use-conditional-query.json",
    "true/use-triplit-hooks.json",
    "true/use-triplit-token.json"
  ],
  "files": [
    {
      "path": "src/lib/triplit/use-list-accounts.ts",
      "content": "import { useMemo } from \"react\"\n\nimport type { AuthHooks } from \"../../types/auth-hooks\"\nimport { getModelName } from \"./model-names\"\nimport { useConditionalQuery } from \"./use-conditional-query\"\nimport type { UseTriplitOptionsProps } from \"./use-triplit-hooks\"\nimport { useTriplitToken } from \"./use-triplit-token\"\n\nexport function useListAccounts({\n    triplit,\n    modelNames,\n    usePlural,\n    isPending\n}: UseTriplitOptionsProps): ReturnType<AuthHooks[\"useListAccounts\"]> {\n    const modelName = getModelName({\n        namespace: \"account\",\n        modelNames,\n        usePlural\n    })\n\n    const { payload } = useTriplitToken(triplit)\n\n    const { results, error, fetching } = useConditionalQuery(\n        triplit,\n        payload?.sub && triplit.query(modelName)\n    )\n\n    const accounts = useMemo(() => {\n        return results?.map((account) => ({\n            accountId: account.accountId as string,\n            provider: account.providerId as string\n        }))\n    }, [results])\n\n    return {\n        data: accounts,\n        isPending: isPending || fetching,\n        error\n    }\n}\n",
      "type": "registry:lib"
    }
  ]
}